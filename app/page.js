"use client";
import { useEffect } from "react";
import "@/styles/global.css";

export default function Home() {
    useEffect(() => {
        const env = document.getElementById("envelope");
        const heartsBox = document.getElementById("hearts");
        const btnAgain = document.getElementById("btnAgain");
        const btnWrite = document.getElementById("btnWrite");
        const modal = document.getElementById("modal");
        const btnCancel = document.getElementById("btnCancel");
        const btnSend = document.getElementById("btnSend");
        const wishText = document.getElementById("wishText");
        const toastBox = document.getElementById("toast");

        let isOpen = false;

        function toggleEnvelope(openForce) {
            isOpen = typeof openForce === "boolean" ? openForce : !isOpen;
            env.classList.toggle("open", isOpen);
            if (isOpen) burstHearts();
        }

        env.addEventListener("click", (e) => {
            if (e.target === btnAgain || e.target === btnWrite) return;
            toggleEnvelope(true);
        });

        btnAgain.addEventListener("click", (e) => {
            e.stopPropagation();
            toggleEnvelope(false);
            setTimeout(() => env.focus(), 0);
        });

        btnWrite.addEventListener("click", (e) => {
            e.stopPropagation();
            modal.classList.add("show");
            wishText.focus();
        });

        btnCancel.addEventListener("click", () => {
            modal.classList.remove("show");
        });

        btnSend.addEventListener("click", async () => {
            const content = wishText.value.trim();
            if (content) {
                try {
                    await fetch("/api/send", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ message: content }),
                    });
                    wishText.value = "";
                    modal.classList.remove("show");
                    showToast("‚ú® ƒê√£ g·ª≠i cho √¥ng tr·ªùi r·ªìi nh√© ‚ú®");
                } catch (err) {
                    console.error(err);
                    showToast("‚ùå L·ªói g·ª≠i tin nh·∫Øn");
                }
            }
        });

        function burstHearts() {
            const count = 18 + Math.floor(Math.random() * 12);
            const rect = env.getBoundingClientRect();
            for (let i = 0; i < count; i++) {
                const h = document.createElement("div");
                h.className = "heart";
                h.textContent =
                    Math.random() > 0.2
                        ? "‚ù§"
                        : Math.random() > 0.5
                            ? "üíï"
                            : "üíñ";
                const startX = 20 + Math.random() * (rect.width - 40);
                h.style.left = startX + "px";
                h.style.bottom = "22%";
                h.style.animationDelay = i * 0.05 + "s";
                h.style.fontSize = 16 + Math.random() * 16 + "px";
                heartsBox.appendChild(h);
                setTimeout(() => h.remove(), 3600 + i * 50);
            }
        }

        function showToast(message) {
            const msg = document.createElement("div");
            msg.className = "toast-msg";
            msg.textContent = message;

            const heart = document.createElement("div");
            heart.className = "toast-heart";
            heart.textContent = "‚ù§";
            msg.appendChild(heart);

            toastBox.appendChild(msg);

            setTimeout(() => {
                msg.style.opacity = "0";
                msg.style.transform = "translateY(-20px)";
                setTimeout(() => msg.remove(), 400);
            }, 3000);
        }
    }, []);

    return (
        <div className="wrap">
            <h1>G·ª≠i S∆∞ÃÉa y√™u ‚Äì m·ªôt chi·∫øc phong th∆∞ nho nh·ªè</h1>
            <p className="lead">B·∫•m v√†o d∆∞∆°ÃÅi nheÃÅ üíå</p>

            <div className="scene">
                <div
                    className="envelope"
                    id="envelope"
                    role="button"
                    aria-label="M·ªü phong th∆∞"
                    tabIndex="0"
                >
                    <div className="env-base"></div>
                    <div className="pocket"></div>
                    <div className="flap"></div>
                    <div className="seal pulse">‚ù§</div>

                    <div className="letter" id="letter">
                        <h2>Em y√™u √†,</h2>
                        <p>
                            Anh bi·∫øt d·∫°o n√†y em r·∫•t bu·ªìn v√† m·ªát. Anh c√≥ th·ªÉ kh√¥ng hi·ªÉu h·∫øt
                            nh·ªØng g√¨ em ƒëang tr·∫£i qua, nh∆∞ng anh mu·ªën em nh·ªõ r·∫±ng em kh√¥ng bao
                            gi·ªù ph·∫£i ch·ªãu ƒë·ª±ng m·ªôt m√¨nh.
                        </p>
                        <p>
                            D√π ch√∫ng ta xa nhau, anh v·∫´n lu√¥n b√™n em, l·∫Øng nghe v√† c√πng em ƒëi
                            qua m·ªçi kh√≥ khƒÉn. Em m·∫°nh m·∫Ω h∆°n em nghƒ© nhi·ªÅu l·∫Øm, v√† anh tin r·ªìi
                            m·ªçi chuy·ªán c≈©ng s·∫Ω d·∫ßn ·ªïn th√¥i.
                        </p>
                        <p>Anh lu√¥n y√™u v√† ·ªü c·∫°nh em, d√π ·ªü b·∫•t c·ª© ƒë√¢u ‚ù§</p>
                        <p>Th∆∞∆°ng em nhi·ªÅu ‚ù§</p>
                        <div style={{ display: "flex", flexDirection: "row" }}>
                            <button className="btn" id="btnAgain" aria-label="ƒê√≥ng th∆∞">
                                ƒê√≥ng th∆∞
                            </button>
                            <p>&nbsp; &nbsp;</p>
                            <button
                                className="btn"
                                id="btnWrite"
                                aria-label="Vi·∫øt g√¨ ƒë√≥ g·ª≠i √¥ng tr·ªùi"
                            >
                                Vi·∫øt g√¨ ƒë√≥ g·ª≠i √¥ng tr·ªùi
                            </button>
                        </div>
                    </div>

                    <div className="hearts" id="hearts" aria-hidden="true"></div>
                </div>
            </div>

            <footer>@ from Quoc Khanh</footer>

            <div className="modal" id="modal">
                <div className="modal-box">
                    <h3>
                        H√£y vi·∫øt th·∫≠t tho·∫£i m√°i nh√©, c√°i n√†y anh kh√¥ng nh·∫≠n ƒë∆∞·ª£c ƒë√¢u, coi
                        nh∆∞ em g·ª≠i cho √¥ng tr·ªùi
                    </h3>
                    <textarea
                        id="wishText"
                        placeholder="Vi·∫øt ƒëi·ªÅu em mu·ªën g·ª≠i..."
                    ></textarea>
                    <div className="modal-actions">
                        <button className="btn" id="btnCancel">
                            H·ªßy
                        </button>
                        <button className="btn" id="btnSend">
                            G·ª≠i
                        </button>
                    </div>
                </div>
            </div>

            <div id="toast"></div>
        </div>
    );
}
